name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install API Gateway deps
        run: |
          cd services/api-gateway && npm ci || npm install
      - name: Install Identity deps
        run: |
          cd services/identity-federation && npm ci || npm install
      - name: Install Discovery deps
        run: |
          cd services/resource-discovery && npm ci || npm install
      - name: TypeScript build checks
        run: |
          cd services/api-gateway && npx tsc -p tsconfig.json --noEmit
          cd ../../services/identity-federation && npx tsc -p tsconfig.json --noEmit
          cd ../../services/resource-discovery && npx tsc -p tsconfig.json --noEmit
      - name: Generate OpenAPI types
        run: |
          npm i -g openapi-typescript
          npm run gen:openapi
      - name: Run governance-engine tests
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install governance-engine deps and test
        run: |
          cd services/governance-engine
          python -m venv .venv
          . .venv/bin/activate
          pip install -r requirements.txt -r requirements-dev.txt
          pytest -q
      - name: Smoke test (compose up + gateway E2E)
        run: |
          chmod +x scripts/ci-smoke.sh
          ./scripts/ci-smoke.sh
name: CI
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [event-store, governance-engine, api-gateway, discovery]
    steps:
      - uses: actions/checkout@v4
      - name: Rust
        if: matrix.service == 'event-store'
        uses: actions-rs/toolchain@v1
        with: { toolchain: stable, override: true }
      - name: Node
        if: matrix.service == 'api-gateway' || matrix.service == 'discovery'
        uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Python
        if: matrix.service == 'governance-engine'
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Build & test
        run: |
          case "${{ matrix.service }}" in
            event-store)
              cd services/event-store && cargo build --verbose && cargo test --all || true ;;
            governance-engine)
              cd services/governance-engine && pip install -r requirements.txt && python -m py_compile main.py && pytest -q || true ;;
            api-gateway)
              cd services/api-gateway && npm ci && npm run build ;;
            discovery)
              cd services/discovery && npm i --omit=dev && node -e "console.log('discovery ok')" ;;
          esac

