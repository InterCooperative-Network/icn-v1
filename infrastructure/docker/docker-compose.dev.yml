version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: icn_development
      POSTGRES_USER: icn_dev
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U icn_dev -d icn_development"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/icn_development
      KC_DB_USERNAME: icn_dev
      KC_DB_PASSWORD: dev_password
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    build:
      context: ../../services/api-gateway
    environment:
      GOVERNANCE_ENGINE_URL: http://governance-engine:8000
      EVENT_STORE_URL: http://event-store:8081
      RESOURCE_DISCOVERY_URL: http://resource-discovery:3002
      IDENTITY_SERVICE_URL: http://identity-federation:3001
      JWT_ENABLED: "false"
      JWT_JWKS_URI: http://keycloak:8080/realms/icn-platform/protocol/openid-connect/certs
      JWT_ISSUER: http://keycloak:8080/realms/icn-platform
      JWT_AUDIENCE: icn-api
    ports:
      - "3000:3000"
    depends_on:
      - governance-engine
      - event-store
      - resource-discovery
      - identity-federation

  governance-engine:
    build:
      context: ../../services/governance-engine
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  event-store:
    build:
      context: ../../services/event-store
    ports:
      - "8081:8081"

  identity-federation:
    build:
      context: ../../services/identity-federation
    ports:
      - "3001:3001"
    depends_on:
      - keycloak

  resource-discovery:
    build:
      context: ../../services/resource-discovery
    ports:
      - "3002:3002"

volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  default:
    name: icn-dev-network


